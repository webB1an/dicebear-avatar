var N=Object.defineProperty,S=Object.defineProperties;var G=Object.getOwnPropertyDescriptors;var k=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var A=(t,e,a)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,l=(t,e)=>{for(var a in e||(e={}))M.call(e,a)&&A(t,a,e[a]);if(k)for(var a of k(e))E.call(e,a)&&A(t,a,e[a]);return t},m=(t,e)=>S(t,G(e));import{r as d,o as v,c as x,d as T,u as P,a as V,b as B,e as O,t as w,f as b,g as c,F as D,s as z,i as F,h as U,j as I,k as j,l as q,m as K,n as J,p as R,q as W,v as X,w as Y,x as Q,y as Z,z as ee,A as te,B as ae,C as se,D as $,E as oe,G as y,H as le,I as h,J as ne,K as re,L as ie,M as ue,N as ce,O as pe}from"./vendor.08104b2f.js";const de=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&i(u)}).observe(document,{childList:!0,subtree:!0});function a(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerpolicy&&(o.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?o.credentials="include":s.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=a(s);fetch(s.href,o)}};de();var me=(t,e)=>{const a=t.__vccOpts||t;for(const[i,s]of e)a[i]=s;return a};const ve={};function fe(t,e){const a=d("router-view");return v(),x(a)}var ye=me(ve,[["render",fe]]);const be=c("br",null,null,-1),_e=c("br",null,null,-1),he=c("br",null,null,-1),ge=T({setup(t){const e=P(),a=()=>e.commit("ADD"),i=()=>e.commit("SUB"),s=async()=>{const f=await e.dispatch("TestActionCommit");console.log("---------------result---------------",f)},o=()=>e.dispatch("TestActionDispatch",1),u=V(()=>e.state.count),_=V(()=>e.getters.double);return(f,C)=>(v(),B(D,null,[O(" count: "+w(b(u))+" ",1),be,O(" double: "+w(b(_))+" ",1),_e,c("button",{onClick:a},"testMutationAdd"),c("button",{onClick:i},"testMutationSub"),he,c("button",{onClick:s},"TestActionCommit"),c("button",{onClick:o},"TestActionDispatch")],64))}});var n={backgroundColor:{type:"color",defaultValue:"#ffffff",alias:"b"},radius:{type:"range",values:[0,50],defaultValue:0,alias:"r"},size:{type:"number",values:[0,2048],defaultValue:0},scale:{type:"range",values:[0,200],defaultValue:100},flip:{type:"switch",values:[0,1],defaultValue:0},rotate:{type:"range",values:[0,360],defaultValue:0},translateX:{type:"range",values:[-100,100],defaultValue:0},translateY:{type:"range",values:[-100,100],defaultValue:0}};const r=z;var xe=m(l({},n),{style:{type:"select",values:r.properties.style.enum,defaultValue:"transparent"},top:{type:"checkbox",values:r.properties.top.items.enum,defaultValue:[]},topChance:{type:"range",values:[0,100],defaultValue:90},hatColor:{type:"checkbox",values:r.properties.hatColor.items.enum,defaultValue:[]},hairColor:{type:"checkbox",values:r.properties.hairColor.items.enum,defaultValue:[]},accessories:{type:"checkbox",values:r.properties.accessories.items.enum,defaultValue:[]},accessoriesChance:{type:"range",values:[0,100],defaultValue:10},accessoriesColor:{type:"checkbox",values:r.properties.accessoriesColor.items.enum,defaultValue:[]},facialHair:{type:"checkbox",values:r.properties.facialHair.items.enum,defaultValue:[]},facialHairChance:{type:"range",values:[0,100],defaultValue:10},facialHairColor:{type:"checkbox",values:r.properties.facialHairColor.items.enum,defaultValue:[]},clothes:{type:"checkbox",values:r.properties.clothes.items.enum,defaultValue:[]},clothesColor:{type:"checkbox",values:r.properties.clothesColor.items.enum,defaultValue:[]},eyes:{type:"checkbox",values:r.properties.eyes.items.enum,defaultValue:[]},eyebrow:{type:"checkbox",values:r.properties.eyebrow.items.enum,defaultValue:[]},mouth:{type:"checkbox",values:r.properties.mouth.items.enum,defaultValue:[]},skin:{type:"checkbox",values:r.properties.skin.items.enum,defaultValue:[]}}),Ve=m(l({},n),{colors:{type:"checkbox",values:["amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","grey","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow"],defaultValue:[]},colorful:{type:"switch",values:[0,1],defaultValue:0},primaryColorLevel:{type:"select",values:[50,100,200,300,400,500,600,700,800,900],defaultValue:600},secondaryColorLevel:{type:"select",values:[50,100,200,300,400,500,600,700,800,900],defaultValue:400},textureChance:{type:"range",values:[0,100],defaultValue:50},mouthChance:{type:"range",values:[0,100],defaultValue:100},sidesChance:{type:"range",values:[0,100],defaultValue:100},topChange:{type:"range",values:[0,100],defaultValue:100}}),Ce=m(l({},n),{colors:{type:"checkbox",values:["amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","grey","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow"],defaultValue:[]},colorLevel:{type:"select",values:[50,100,200,300,400,500,600,700,800,900],defaultValue:600}}),ke=m(l({},n),{backgroundColors:{type:"checkbox",values:["amber","blue","blueGrey","brown","cyan","deepOrange","deepPurple","green","grey","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow"],defaultValue:[]},backgroundColorLevel:{type:"select",values:[50,100,200,300,400,500,600,700,800,900],defaultValue:600},fontSize:{type:"range",values:[1,100],defaultValue:50},chars:{type:"range",values:[0,2],defaultValue:2},bold:{type:"switch",values:[0,1],defaultValue:0}}),Ae=l({},n),Oe=l({},n),we=l({},n),$e=l({},n),Te=l({},n),Be=l({},n),De=l({},n),Le=l({},n),He=l({},n),Ne=l({},n),Se=l({},n),Ge=l({},n),Me=l({},n),g=[{id:"adventurer",name:"@dicebear/adventurer",style:F,options:Ge},{id:"adventurer-neutral",name:"@dicebear/adventurer-neutral",style:U,options:Me},{id:"avataaars",name:"@dicebear/avatars-avataaars-sprites",style:I,options:xe},{id:"big-ears",name:"@dicebear/big-ears",style:j,options:Ne},{id:"big-ears-neutral",name:"@dicebear/big-ears-neutral",style:q,options:Se},{id:"big-smile",name:"@dicebear/big-smile",style:K,options:He},{id:"bottts",name:"@dicebear/avatars-bottts-sprites",style:J,options:Ve},{id:"croodles",name:"@dicebear/croodles",style:R,options:Oe},{id:"croodles-neutral",name:"@dicebear/croodles-neutral",style:W,options:we},{id:"identicon",name:"@dicebear/avatars-identicon-sprites",style:X,options:Ce},{id:"initials",name:"@dicebear/avatars-initials-sprites",style:Y,options:ke},{id:"micah",name:"@dicebear/micah",style:Q,options:Ae},{id:"miniavs",name:"@dicebear/micah",style:Z,options:Le},{id:"open-peeps",name:"@dicebear/open-peeps",style:ee,options:Be},{id:"personas",name:"@dicebear/personas",style:te,options:De},{id:"pixel-art",name:"@dicebear/pixel-art",style:ae,options:$e},{id:"pixel-art-neutral",name:"@dicebear/pixel-art-neutral",style:se,options:Te}];const Ee=["innerHTML"],Pe=T({setup(t){const e=$(""),a=$("");let i=oe(g[0]);const s=V(()=>(g.forEach(o=>{o.id===e.value&&(i=o)}),le(i.style,{seed:a.value})));return(o,u)=>{const _=d("el-option"),f=d("el-select"),C=d("el-input"),L=d("el-col"),H=d("el-row");return v(),x(H,{class:"avatar-container"},{default:y(()=>[c("div",{class:"avatar-logo",innerHTML:b(s)},null,8,Ee),h(L,{span:24},{default:y(()=>[h(C,{modelValue:a.value,"onUpdate:modelValue":u[1]||(u[1]=p=>a.value=p),placeholder:"\u8F93\u5165\u5185\u5BB9",size:"large",class:"input-with-select"},{prepend:y(()=>[h(f,{modelValue:e.value,"onUpdate:modelValue":u[0]||(u[0]=p=>e.value=p),placeholder:"\u9009\u62E9\u7C7B\u578B",style:{width:"160px"}},{default:y(()=>[(v(!0),B(D,null,ne(b(g),p=>(v(),x(_,{key:p.id,label:p.id,value:p.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue"])]),_:1},8,["modelValue"])]),_:1})]),_:1})}}}),ze=[{path:"/",name:"Avatar",component:Pe},{path:"/home",name:"Home",component:ge}],Fe=re({history:ie(),routes:ze}),Ue={count:0},Ie=ue({state:Ue,getters:{double:t=>t.count*2},mutations:{ADD:(t,e)=>{e?t.count+=e:t.count++},SUB:(t,e)=>{e?t.count-=e:t.count--}},actions:{TestActionCommit({state:t,commit:e,dispatch:a},i){return console.log("---------------dispatch TestActionCommit---------------"),new Promise((s,o)=>{setTimeout(()=>{e("ADD",i),s(10)},2e3)})},TestActionDispatch({state:t,commit:e,dispatch:a},i){console.log("---------------TestActionDispatch dispatch TestActionCommit---------------"),a("TestActionCommit",i)}}}),je=ce(ye);je.use(pe).use(Ie).use(Fe).mount("#app");
